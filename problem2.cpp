/*
author: nadia salem
euler problem 2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
using namespace std;
int fib(int n){
    //Checking if n is the first or second fibonacci
    if(n == 0 || n== 1){
        return 1;
    }
    else{
    //recursively summing the previous 2 fibonacci numbers
        return fib(n-1) + fib(n-2);
    }
}
int main() {
    int sum = 0;
    int i = 1;
    int max = 4000000;
    while(fib(i) < max){
        if(fib(i) % 2 == 0){
            sum += fib(i);
        }
        i++;
    }
    cout << sum << endl;
    return 0;
}
